=======================
Module 0-add_integer.py
=======================
This module defines class that inherits from list.

Usage
=====
    "class MyList(list)" is used to add new methods to the list class,
    from which it inherates.

::
    >>> MyList = __import__('1-my_list').MyList
    >>> my_list = MyList()
    >>> my_list.append(1)
    >>> my_list.append(4)
    >>> my_list.append(2)
    >>> my_list.append(3)
    >>> my_list.append(5)
    >>> print(my_list)
    [1, 4, 2, 3, 5]
    >>> my_list.print_sorted()
    [1, 2, 3, 4, 5]

Tests
=====
Normal functionality: my_list instanciates a new list object, can print sorted lists, inherits from list
so all list methods should work as expected.

::
    >>> my_list = MyList([1, 2, 3, 4])
    >>> type(my_list)
    <class '1-my_list.MyList'>
    >>> print(my_list)
    [1, 2, 3, 4]
    >>> my_list[3] = 5
    >>> print(my_list)
    [1, 2, 3, 5]
    >>> my_list.remove(5)
    >>> print(my_list)
    [1, 2, 3]

::
    >>> my_list = MyList()
    >>> print(my_list)
    []
    >>> my_list.print_sorted()
    []

::
    >>> my_list = MyList()
    >>> my_list.append(89)
    >>> my_list.append(-45)
    >>> my_list.append(5)
    >>> print(my_list)
    [89, -45, 5]
    >>> my_list.print_sorted()
    [-45, 5, 89]


::
    >>> my_list = MyList()
    >>> my_list.append("Alejo")
    >>> my_list.append("Torres")
    >>> my_list.append("Holberton")
    >>> print(my_list)
    ['Alejo', 'Torres', 'Holberton']
    >>> my_list.print_sorted()
    ['Alejo', 'Holberton', 'Torres']

Exceptions:
    "class MyList(list)" expects one iterable argument, also, "print_sorted(...)"
    should not receive arguments.

::
    >>> my_list = MyList(None)
    Traceback (most recent call last):
    ...
    TypeError: 'NoneType' object is not iterable

::
    >>> my_list = MyList([1, 2], [3, 4])
    Traceback (most recent call last):
    ...
    TypeError: list() takes at most 1 argument (2 given)

::
    >>> my_list = MyList([1, 2], [3, 4])
    Traceback (most recent call last):
    ...
    TypeError: list() takes at most 1 argument (2 given)

::
    >>> my_list.print_sorted(1)
    Traceback (most recent call last):
    ...
    TypeError: print_sorted() takes 1 positional argument but 2 were given

::
    >>> my_list = MyList([1, "Alejo", "Torres", 8])
    >>> my_list.print_sorted()
    Traceback (most recent call last):
    ...
    TypeError: unorderable types: str() < int()
