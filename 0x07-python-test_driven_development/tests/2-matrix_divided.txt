==============================
The module 2-matrix_divided.py
==============================
This module defines an integer division of all elements of a matrix
by a divisor, function "matrix_divided(matrix, div)"

Usage
=====
"matrix_divided(...)" returns a matrix with each division, must receive a
valid matrix and a valid divisor.

::
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
    >>> matrix = [
    ...     [2, 4, 6],
    ...     [8, 10, 12]
    ... ]
    >>> print(matrix_divided(matrix, 2))
    [[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

Tests
=====
Normal functionality:

    Works with positive or negative integer or floats, results are rounded up to two decimal numbers,
    original matrix is left unchanged.

::
    >>> matrix = [
    ...     [1, 2, 3],
    ...     [4, 5, 6]
    ... ]
    >>> print(matrix_divided(matrix, 3))
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
    >>> print(matrix)
    [[1, 2, 3], [4, 5, 6]]

::
    >>> matrix = [
    ...     [1.1, -2.2, 3.3],
    ...     [4.4, 5.5, -6.6]
    ... ]
    >>> print(matrix_divided(matrix, 3))
    [[0.37, -0.73, 1.1], [1.47, 1.83, -2.2]]
    >>> print(matrix)
    [[1.1, -2.2, 3.3], [4.4, 5.5, -6.6]]

::
    >>> matrix = [
    ...     [1, -2.2, 3, 4.4, 5],
    ...     [-6.6, 7.00, 8, 9.999, 10]
    ... ]
    >>> print(matrix_divided(matrix, 3))
    [[0.33, -0.73, 1.0, 1.47, 1.67], [-2.2, 2.33, 2.67, 3.33, 3.33]]
    >>> print(matrix)
    [[1, -2.2, 3, 4.4, 5], [-6.6, 7.0, 8, 9.999, 10]]

::
    >>> matrix = [[]]
    >>> print(matrix_divided(matrix, 3))
    [[]]
    >>> print(matrix)
    [[]]

Exceptions:

    matrix must be a list of lists of integers or floats,
    each row of the matrix must be of the same size,
    if not TypeError will be raised.

::
    >>> matrix = "hello"
    >>> print(matrix_divided(matrix, 8))
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

::
    >>> matrix = None
    >>> print(matrix_divided(matrix, 8))
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

::
    >>> matrix = []
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

::
    >>> matrix = [9, 24, 7]
    >>> print(matrix_divided(matrix, 8))
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

::
    >>> matrix = [
    ...     [1, 2, 3],
    ...     [4, "5", 6]
    ... ]
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

::
    >>> matrix = [
    ...     [1, 2, 3],
    ...     [5, 6, 7, 8]
    ... ]
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size

div must be a number (int or float) and not 0, otherwise,
a TypeError or a ZeroDivisionEror will be raised.

::
    >>> matrix = [
    ...     [1, 2, 3],
    ...     [5, 6, 7]
    ... ]
    >>> print(matrix_divided(matrix, "9"))
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

::
    >>> print(matrix_divided(matrix, None))
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

::
    >>> print(matrix_divided(matrix, 0))
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero
