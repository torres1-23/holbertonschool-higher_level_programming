===========================
The module 3-say_my_name.py
===========================
This module defines a print function
   "def say_my_name(first_name, last_name="")"
   that prints "My name is <first name> <last name>".

Usage
=====
    "say_my_name(...)" must receive valid strings,
    prints "My name is <first name> <last name>".

::
    >>> say_my_name = __import__('3-say_my_name').say_my_name   
    >>> say_my_name("Alejandro", "Torres")
    My name is Alejandro Torres

Tests
=====
Normal functionality:
    Works with only string, second parameter is optional,
    if not given will print an empty string.

::
    >>> say_my_name = __import__('3-say_my_name').say_my_name   
    >>> say_my_name("Mauricio", "Torres")
    My name is Mauricio Torres

::
    >>> say_my_name("Alejo")
    My name is Alejo 

::
    >>> say_my_name("")
    My name is  

Exceptions:
    arguments given to "say_my_name(...)" must be strings,
    otherwise a TypeError will be raised.

::
    >>> say_my_name(123, "Number")
    Traceback (most recent call last):
    ...
    TypeError: first_name must be a string

::
    >>> say_my_name("Number", 456)
    Traceback (most recent call last):
    ...
    TypeError: last_name must be a string

::
    >>> say_my_name({"First": 1, "Second": 2}, 98.23)
    Traceback (most recent call last):
    TypeError: first_name must be a string

::
    >>> say_my_name(None)
    Traceback (most recent call last):
    ...
    TypeError: first_name must be a string

"first_name" argument must be given.

::
    >>> say_my_name()
    Traceback (most recent call last):
    ...
    TypeError: say_my_name() missing 1 required positional argument: 'first_name'
